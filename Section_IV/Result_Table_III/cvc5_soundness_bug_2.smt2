;; solver : CVC5
;; version : CVC5 - v 1.0.1  
;; option : --check-models --produce-models --sygus-inst
;; Generated Bug Type : Soundness Bug
(set-logic QF_SLIA)
(declare-fun var_0 () String)
(declare-fun var_1 () String)
(declare-fun var_2 () String)
(declare-fun var_3 () String)
(declare-fun var_4 () String)
(declare-fun var_5 () String)
(declare-fun var_6 () String)
(declare-fun var_7 () String)
(declare-fun var_8 () String)
(declare-fun var_9 () String)
(declare-fun var_10 () String)
(declare-fun var_11 () String)
(declare-fun var_12 () String)
(assert (str.in_re (str.++ var_9 "z" "b" var_10) (re.++ (re.* (re.union (str.to_re "z") (re.++ (re.union (str.to_re "b") (re.union (str.to_re "a") (str.to_re "c"))) (re.++ (re.* (str.to_re "z")) (re.union (str.to_re "a") (str.to_re "c")))))) (re.union (str.to_re "") (re.++ (re.union (str.to_re "b") (re.union (str.to_re "a") (str.to_re "c"))) (re.* (str.to_re "z")))))))
(assert (str.in_re (str.++ "b" var_10) (re.* (re.range "a" "u"))))
(assert (str.in_re var_9 (re.* (re.range "a" "u"))))
(assert (str.in_re var_10 (re.* (re.range "a" "u"))))
(assert (xor (str.in_re "z" (re.opt re.allchar)) (str.contains (str.at "a" (str.to_int "c")) var_9)))
(assert (not (str.in_re (str.++ var_9 "a" "z" var_10) (re.* (re.++ (re.union (str.to_re "z") (re.union (str.to_re "a") (str.to_re "c"))) (re.++ (re.* (re.union (str.to_re "a") (str.to_re "c"))) (str.to_re "z")))))))
(check-sat)
(get-model)